#coding:utf-8

import sys
try:
    reload(sys)
    sys.setdefaultencoding('utf-8')
except:
    pass

import os
import xlrd

XLS_FILE = os.getenv("HOME") +  "/puppy/king_design/exl/errcode.xlsx"
DST_FILE = "gamedata/errcode.go"

def gen_header():
    return """// Generated by gen_errcode.py
// DO NOT EDIT!

package gamedata

import "strconv"

type GameError int32

func (e GameError) Error() string {
	return strconv.Itoa(int(e))
}

func (e GameError) Errcode() int32 {
	return int32(e)
}

const (
"""

def gen_errcode(sheet_data):
    data = gen_header()
    for row in sheet_data:
        data += "    %s GameError = %s\n" % (row[1], str(row[0]))
    data += ")\n"
    out = open(DST_FILE, "w")
    out.write(data)
    out.close()

def format_value(value, vtype):
    if vtype == 2 and value == int(value): 
        return int(value)
    else:
        return value

def sheet2dict(sheet):
    data = []
    for ridx in range(9, sheet.nrows):
        row = []
        for cidx in range(sheet.ncols):
            value = sheet.cell_value(ridx, cidx)
            vtype = sheet.cell_type(ridx, cidx)
            v = format_value(value, vtype)
            row.append(v)
        data.append(row)
    return data

def parse():
    book = xlrd.open_workbook(XLS_FILE)
    for sheet in book.sheets():
        if sheet.name != "errcode":
            continue
        print("i am fucking %s ..." % sheet.name)
        sdata = sheet2dict(sheet)
        gen_errcode(sdata)
        print("%s fuck done" % sheet.name)

if __name__ == "__main__":
    parse()

