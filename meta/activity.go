// Generated by gen_meta.py
// DO NOT EDIT!

package meta

import (
	"errors"

	"kinger/gopuppy/network/protoc"
	"kinger/proto/pb"
)

//@ C2S_FETCH_ACTIVITY_DETAIL    req: ActivityID    resp: ActivityData
//------------------------------------------------------------------------------------------
// implement protoc.IMeta
type C2S_FETCH_ACTIVITY_DETAIL_Meta struct {
}

func (m *C2S_FETCH_ACTIVITY_DETAIL_Meta) GetMessageID() protoc.IMessageID {
	return pb.MessageID_C2S_FETCH_ACTIVITY_DETAIL
}

func (m *C2S_FETCH_ACTIVITY_DETAIL_Meta) EncodeArg(arg interface{}) ([]byte, error) {
	_arg, ok := arg.(*pb.ActivityID)
	if !ok {
		p, ok := arg.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("C2S_FETCH_ACTIVITY_DETAIL_Meta EncodeArg error type")
	}

	return _arg.Marshal()
}

func (m *C2S_FETCH_ACTIVITY_DETAIL_Meta) DecodeArg(data []byte) (interface{}, error) {
	arg := &pb.ActivityID{}
	if err := arg.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return arg, nil
	}
}

func (m *C2S_FETCH_ACTIVITY_DETAIL_Meta) EncodeReply(reply interface{}) ([]byte, error) {
	_reply, ok := reply.(*pb.ActivityData)
	if !ok {
		p, ok := reply.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("C2S_FETCH_ACTIVITY_DETAIL_Meta EncodeReply error type")
	}

	return _reply.Marshal()
}

func (m *C2S_FETCH_ACTIVITY_DETAIL_Meta) DecodeReply(data []byte) (interface{}, error) {
	reply := &pb.ActivityData{}
	if err := reply.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return reply, nil
	}
}

//------------------------------------ C2S_FETCH_ACTIVITY_DETAIL END ----------------------------------------

//@ C2S_RECEIVE_ACTIVITY_REWARD  req: TargetActivity    resp: Reward
//------------------------------------------------------------------------------------------
// implement protoc.IMeta
type C2S_RECEIVE_ACTIVITY_REWARD_Meta struct {
}

func (m *C2S_RECEIVE_ACTIVITY_REWARD_Meta) GetMessageID() protoc.IMessageID {
	return pb.MessageID_C2S_RECEIVE_ACTIVITY_REWARD
}

func (m *C2S_RECEIVE_ACTIVITY_REWARD_Meta) EncodeArg(arg interface{}) ([]byte, error) {
	_arg, ok := arg.(*pb.TargetActivity)
	if !ok {
		p, ok := arg.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("C2S_RECEIVE_ACTIVITY_REWARD_Meta EncodeArg error type")
	}

	return _arg.Marshal()
}

func (m *C2S_RECEIVE_ACTIVITY_REWARD_Meta) DecodeArg(data []byte) (interface{}, error) {
	arg := &pb.TargetActivity{}
	if err := arg.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return arg, nil
	}
}

func (m *C2S_RECEIVE_ACTIVITY_REWARD_Meta) EncodeReply(reply interface{}) ([]byte, error) {
	_reply, ok := reply.(*pb.Reward)
	if !ok {
		p, ok := reply.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("C2S_RECEIVE_ACTIVITY_REWARD_Meta EncodeReply error type")
	}

	return _reply.Marshal()
}

func (m *C2S_RECEIVE_ACTIVITY_REWARD_Meta) DecodeReply(data []byte) (interface{}, error) {
	reply := &pb.Reward{}
	if err := reply.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return reply, nil
	}
}

//------------------------------------ C2S_RECEIVE_ACTIVITY_REWARD END ----------------------------------------

//@ C2S_FETCH_ACTIVITY_LABEL_LIST  resp: ActivityLabelList
//------------------------------------------------------------------------------------------
// implement protoc.IMeta
type C2S_FETCH_ACTIVITY_LABEL_LIST_Meta struct {
}

func (m *C2S_FETCH_ACTIVITY_LABEL_LIST_Meta) GetMessageID() protoc.IMessageID {
	return pb.MessageID_C2S_FETCH_ACTIVITY_LABEL_LIST
}

func (m *C2S_FETCH_ACTIVITY_LABEL_LIST_Meta) EncodeArg(arg interface{}) ([]byte, error) {
	return nil, nil
}

func (m *C2S_FETCH_ACTIVITY_LABEL_LIST_Meta) DecodeArg(data []byte) (interface{}, error) {
	return nil, nil
}

func (m *C2S_FETCH_ACTIVITY_LABEL_LIST_Meta) EncodeReply(reply interface{}) ([]byte, error) {
	_reply, ok := reply.(*pb.ActivityLabelList)
	if !ok {
		p, ok := reply.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("C2S_FETCH_ACTIVITY_LABEL_LIST_Meta EncodeReply error type")
	}

	return _reply.Marshal()
}

func (m *C2S_FETCH_ACTIVITY_LABEL_LIST_Meta) DecodeReply(data []byte) (interface{}, error) {
	reply := &pb.ActivityLabelList{}
	if err := reply.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return reply, nil
	}
}

//------------------------------------ C2S_FETCH_ACTIVITY_LABEL_LIST END ----------------------------------------

//@ C2S_FETCH_FIRST_RECHARGE_ACTIVITY_DETAIL   resp: ActivityData
//------------------------------------------------------------------------------------------
// implement protoc.IMeta
type C2S_FETCH_FIRST_RECHARGE_ACTIVITY_DETAIL_Meta struct {
}

func (m *C2S_FETCH_FIRST_RECHARGE_ACTIVITY_DETAIL_Meta) GetMessageID() protoc.IMessageID {
	return pb.MessageID_C2S_FETCH_FIRST_RECHARGE_ACTIVITY_DETAIL
}

func (m *C2S_FETCH_FIRST_RECHARGE_ACTIVITY_DETAIL_Meta) EncodeArg(arg interface{}) ([]byte, error) {
	return nil, nil
}

func (m *C2S_FETCH_FIRST_RECHARGE_ACTIVITY_DETAIL_Meta) DecodeArg(data []byte) (interface{}, error) {
	return nil, nil
}

func (m *C2S_FETCH_FIRST_RECHARGE_ACTIVITY_DETAIL_Meta) EncodeReply(reply interface{}) ([]byte, error) {
	_reply, ok := reply.(*pb.ActivityData)
	if !ok {
		p, ok := reply.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("C2S_FETCH_FIRST_RECHARGE_ACTIVITY_DETAIL_Meta EncodeReply error type")
	}

	return _reply.Marshal()
}

func (m *C2S_FETCH_FIRST_RECHARGE_ACTIVITY_DETAIL_Meta) DecodeReply(data []byte) (interface{}, error) {
	reply := &pb.ActivityData{}
	if err := reply.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return reply, nil
	}
}

//------------------------------------ C2S_FETCH_FIRST_RECHARGE_ACTIVITY_DETAIL END ----------------------------------------

//@ S2C_REFRESH_ACTIVITY_STATUS req: ActivityStatusChange
//------------------------------------------------------------------------------------------
// implement protoc.IMeta
type S2C_REFRESH_ACTIVITY_STATUS_Meta struct {
}

func (m *S2C_REFRESH_ACTIVITY_STATUS_Meta) GetMessageID() protoc.IMessageID {
	return pb.MessageID_S2C_REFRESH_ACTIVITY_STATUS
}

func (m *S2C_REFRESH_ACTIVITY_STATUS_Meta) EncodeArg(arg interface{}) ([]byte, error) {
	_arg, ok := arg.(*pb.ActivityStatusChange)
	if !ok {
		p, ok := arg.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("S2C_REFRESH_ACTIVITY_STATUS_Meta EncodeArg error type")
	}

	return _arg.Marshal()
}

func (m *S2C_REFRESH_ACTIVITY_STATUS_Meta) DecodeArg(data []byte) (interface{}, error) {
	arg := &pb.ActivityStatusChange{}
	if err := arg.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return arg, nil
	}
}

func (m *S2C_REFRESH_ACTIVITY_STATUS_Meta) EncodeReply(reply interface{}) ([]byte, error) {
	return nil, nil
}

func (m *S2C_REFRESH_ACTIVITY_STATUS_Meta) DecodeReply(data []byte) (interface{}, error) {
	return nil, nil
}

//------------------------------------ S2C_REFRESH_ACTIVITY_STATUS END ----------------------------------------

//@ S2C_REFRESH_ACTIVITY_FINSHNUM req: ActivityFinshChange
//------------------------------------------------------------------------------------------
// implement protoc.IMeta
type S2C_REFRESH_ACTIVITY_FINSHNUM_Meta struct {
}

func (m *S2C_REFRESH_ACTIVITY_FINSHNUM_Meta) GetMessageID() protoc.IMessageID {
	return pb.MessageID_S2C_REFRESH_ACTIVITY_FINSHNUM
}

func (m *S2C_REFRESH_ACTIVITY_FINSHNUM_Meta) EncodeArg(arg interface{}) ([]byte, error) {
	_arg, ok := arg.(*pb.ActivityFinshChange)
	if !ok {
		p, ok := arg.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("S2C_REFRESH_ACTIVITY_FINSHNUM_Meta EncodeArg error type")
	}

	return _arg.Marshal()
}

func (m *S2C_REFRESH_ACTIVITY_FINSHNUM_Meta) DecodeArg(data []byte) (interface{}, error) {
	arg := &pb.ActivityFinshChange{}
	if err := arg.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return arg, nil
	}
}

func (m *S2C_REFRESH_ACTIVITY_FINSHNUM_Meta) EncodeReply(reply interface{}) ([]byte, error) {
	return nil, nil
}

func (m *S2C_REFRESH_ACTIVITY_FINSHNUM_Meta) DecodeReply(data []byte) (interface{}, error) {
	return nil, nil
}

//------------------------------------ S2C_REFRESH_ACTIVITY_FINSHNUM END ----------------------------------------

//@ S2C_REFRESH_ACTIVITY_RECEIVE_STATUS req: ActivityReceiveChange
//------------------------------------------------------------------------------------------
// implement protoc.IMeta
type S2C_REFRESH_ACTIVITY_RECEIVE_STATUS_Meta struct {
}

func (m *S2C_REFRESH_ACTIVITY_RECEIVE_STATUS_Meta) GetMessageID() protoc.IMessageID {
	return pb.MessageID_S2C_REFRESH_ACTIVITY_RECEIVE_STATUS
}

func (m *S2C_REFRESH_ACTIVITY_RECEIVE_STATUS_Meta) EncodeArg(arg interface{}) ([]byte, error) {
	_arg, ok := arg.(*pb.ActivityReceiveChange)
	if !ok {
		p, ok := arg.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("S2C_REFRESH_ACTIVITY_RECEIVE_STATUS_Meta EncodeArg error type")
	}

	return _arg.Marshal()
}

func (m *S2C_REFRESH_ACTIVITY_RECEIVE_STATUS_Meta) DecodeArg(data []byte) (interface{}, error) {
	arg := &pb.ActivityReceiveChange{}
	if err := arg.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return arg, nil
	}
}

func (m *S2C_REFRESH_ACTIVITY_RECEIVE_STATUS_Meta) EncodeReply(reply interface{}) ([]byte, error) {
	return nil, nil
}

func (m *S2C_REFRESH_ACTIVITY_RECEIVE_STATUS_Meta) DecodeReply(data []byte) (interface{}, error) {
	return nil, nil
}

//------------------------------------ S2C_REFRESH_ACTIVITY_RECEIVE_STATUS END ----------------------------------------

//@ S2C_REFRESH_FIRST_RECHARGE_RECEIVE_STATUS req: ActivityReceiveChange
//------------------------------------------------------------------------------------------
// implement protoc.IMeta
type S2C_REFRESH_FIRST_RECHARGE_RECEIVE_STATUS_Meta struct {
}

func (m *S2C_REFRESH_FIRST_RECHARGE_RECEIVE_STATUS_Meta) GetMessageID() protoc.IMessageID {
	return pb.MessageID_S2C_REFRESH_FIRST_RECHARGE_RECEIVE_STATUS
}

func (m *S2C_REFRESH_FIRST_RECHARGE_RECEIVE_STATUS_Meta) EncodeArg(arg interface{}) ([]byte, error) {
	_arg, ok := arg.(*pb.ActivityReceiveChange)
	if !ok {
		p, ok := arg.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("S2C_REFRESH_FIRST_RECHARGE_RECEIVE_STATUS_Meta EncodeArg error type")
	}

	return _arg.Marshal()
}

func (m *S2C_REFRESH_FIRST_RECHARGE_RECEIVE_STATUS_Meta) DecodeArg(data []byte) (interface{}, error) {
	arg := &pb.ActivityReceiveChange{}
	if err := arg.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return arg, nil
	}
}

func (m *S2C_REFRESH_FIRST_RECHARGE_RECEIVE_STATUS_Meta) EncodeReply(reply interface{}) ([]byte, error) {
	return nil, nil
}

func (m *S2C_REFRESH_FIRST_RECHARGE_RECEIVE_STATUS_Meta) DecodeReply(data []byte) (interface{}, error) {
	return nil, nil
}

//------------------------------------ S2C_REFRESH_FIRST_RECHARGE_RECEIVE_STATUS END ----------------------------------------

//@ S2C_GRANT_ACTIVITY_REWARD req: Reward
//------------------------------------------------------------------------------------------
// implement protoc.IMeta
type S2C_GRANT_ACTIVITY_REWARD_Meta struct {
}

func (m *S2C_GRANT_ACTIVITY_REWARD_Meta) GetMessageID() protoc.IMessageID {
	return pb.MessageID_S2C_GRANT_ACTIVITY_REWARD
}

func (m *S2C_GRANT_ACTIVITY_REWARD_Meta) EncodeArg(arg interface{}) ([]byte, error) {
	_arg, ok := arg.(*pb.Reward)
	if !ok {
		p, ok := arg.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("S2C_GRANT_ACTIVITY_REWARD_Meta EncodeArg error type")
	}

	return _arg.Marshal()
}

func (m *S2C_GRANT_ACTIVITY_REWARD_Meta) DecodeArg(data []byte) (interface{}, error) {
	arg := &pb.Reward{}
	if err := arg.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return arg, nil
	}
}

func (m *S2C_GRANT_ACTIVITY_REWARD_Meta) EncodeReply(reply interface{}) ([]byte, error) {
	return nil, nil
}

func (m *S2C_GRANT_ACTIVITY_REWARD_Meta) DecodeReply(data []byte) (interface{}, error) {
	return nil, nil
}

//------------------------------------ S2C_GRANT_ACTIVITY_REWARD END ----------------------------------------
