// Generated by gen_meta.py
// DO NOT EDIT!

package meta

import (
	"errors"

	"kinger/gopuppy/network/protoc"
	"kinger/proto/pb"
)

//@ C2S_DEL_HINT  req: Hint
//------------------------------------------------------------------------------------------
// implement protoc.IMeta
type C2S_DEL_HINT_Meta struct {
}

func (m *C2S_DEL_HINT_Meta) GetMessageID() protoc.IMessageID {
	return pb.MessageID_C2S_DEL_HINT
}

func (m *C2S_DEL_HINT_Meta) EncodeArg(arg interface{}) ([]byte, error) {
	_arg, ok := arg.(*pb.Hint)
	if !ok {
		p, ok := arg.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("C2S_DEL_HINT_Meta EncodeArg error type")
	}

	return _arg.Marshal()
}

func (m *C2S_DEL_HINT_Meta) DecodeArg(data []byte) (interface{}, error) {
	arg := &pb.Hint{}
	if err := arg.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return arg, nil
	}
}

func (m *C2S_DEL_HINT_Meta) EncodeReply(reply interface{}) ([]byte, error) {
	return nil, nil
}

func (m *C2S_DEL_HINT_Meta) DecodeReply(data []byte) (interface{}, error) {
	return nil, nil
}

//------------------------------------ C2S_DEL_HINT END ----------------------------------------

//@ S2C_UPDATE_HINT    req: Hint
//------------------------------------------------------------------------------------------
// implement protoc.IMeta
type S2C_UPDATE_HINT_Meta struct {
}

func (m *S2C_UPDATE_HINT_Meta) GetMessageID() protoc.IMessageID {
	return pb.MessageID_S2C_UPDATE_HINT
}

func (m *S2C_UPDATE_HINT_Meta) EncodeArg(arg interface{}) ([]byte, error) {
	_arg, ok := arg.(*pb.Hint)
	if !ok {
		p, ok := arg.([]byte)
		if ok {
			return p, nil
		}

		return nil, errors.New("S2C_UPDATE_HINT_Meta EncodeArg error type")
	}

	return _arg.Marshal()
}

func (m *S2C_UPDATE_HINT_Meta) DecodeArg(data []byte) (interface{}, error) {
	arg := &pb.Hint{}
	if err := arg.Unmarshal(data); err != nil {
		return nil, err
	} else {
		return arg, nil
	}
}

func (m *S2C_UPDATE_HINT_Meta) EncodeReply(reply interface{}) ([]byte, error) {
	return nil, nil
}

func (m *S2C_UPDATE_HINT_Meta) DecodeReply(data []byte) (interface{}, error) {
	return nil, nil
}

//------------------------------------ S2C_UPDATE_HINT END ----------------------------------------
